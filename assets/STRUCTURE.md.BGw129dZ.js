import{_ as n,c as a,o as t,a2 as i}from"./chunks/framework.DCouvwsE.js";const u=JSON.parse('{"title":"Documentation Structure","description":"","frontmatter":{},"headers":[],"relativePath":"STRUCTURE.md","filePath":"STRUCTURE.md","lastUpdated":1756736948000}'),s={name:"STRUCTURE.md"};function r(o,e,l,d,c,p){return t(),a("div",null,[...e[0]||(e[0]=[i(`<h1 id="documentation-structure" tabindex="-1">Documentation Structure <a class="header-anchor" href="#documentation-structure" aria-label="Permalink to &quot;Documentation Structure&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>This document describes the complete structure of the RNode Server documentation, which has been rewritten from a single <code>README.md</code> into a comprehensive VitePress site.</p><h2 id="file-structure" tabindex="-1">File Structure <a class="header-anchor" href="#file-structure" aria-label="Permalink to &quot;File Structure&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├── .vitepress/</span></span>
<span class="line"><span>│   └── config.mts              # VitePress configuration</span></span>
<span class="line"><span>├── index.md                     # Main landing page</span></span>
<span class="line"><span>├── guide/                       # Getting started guides</span></span>
<span class="line"><span>│   ├── index.md                # Guide overview</span></span>
<span class="line"><span>│   ├── installation.md         # Installation instructions</span></span>
<span class="line"><span>│   ├── quick-start.md          # Quick start guide</span></span>
<span class="line"><span>│   └── configuration.md        # Configuration options</span></span>
<span class="line"><span>├── api/                        # API reference</span></span>
<span class="line"><span>│   ├── index.md                # API overview</span></span>
<span class="line"><span>│   ├── app.md                  # App object methods</span></span>
<span class="line"><span>│   ├── router.md               # Router API</span></span>
<span class="line"><span>│   ├── request.md              # Request object</span></span>
<span class="line"><span>│   ├── response.md             # Response object</span></span>
<span class="line"><span>│   ├── http-utilities.md       # HTTP client utilities</span></span>
<span class="line"><span>│   └── error-codes.md          # Error status codes</span></span>
<span class="line"><span>├── examples/                   # Code examples</span></span>
<span class="line"><span>│   ├── index.md                # Examples overview</span></span>
<span class="line"><span>│   ├── middleware.md           # Middleware examples</span></span>
<span class="line"><span>│   ├── file-operations.md      # File handling examples</span></span>
<span class="line"><span>│   ├── advanced-usage.md       # Advanced patterns</span></span>
<span class="line"><span>│   ├── body-handling.md        # Body type handling</span></span>
<span class="line"><span>│   └── playground.md           # Playground examples</span></span>
<span class="line"><span>├── templates/                  # Template engine</span></span>
<span class="line"><span>│   ├── index.md                # Templates overview</span></span>
<span class="line"><span>│   ├── syntax.md               # Tera syntax</span></span>
<span class="line"><span>│   └── examples.md             # Template examples</span></span>
<span class="line"><span>├── caching/                    # Caching system</span></span>
<span class="line"><span>│   ├── index.md                # Caching overview</span></span>
<span class="line"><span>│   ├── api.md                  # Cache API reference</span></span>
<span class="line"><span>│   ├── examples.md             # Cache examples</span></span>
<span class="line"><span>│   └── architecture.md         # Cache architecture</span></span>
<span class="line"><span>├── architecture/               # System architecture</span></span>
<span class="line"><span>│   ├── index.md                # Architecture overview</span></span>
<span class="line"><span>│   ├── overview.md             # System design</span></span>
<span class="line"><span>│   └── promise-system.md       # Promise management system</span></span>
<span class="line"><span>├── monitoring/                 # Monitoring and metrics</span></span>
<span class="line"><span>│   ├── index.md                # Monitoring overview</span></span>
<span class="line"><span>│   ├── metrics.md              # Prometheus metrics</span></span>
<span class="line"><span>│   ├── metrics-examples.md     # PromQL queries</span></span>
<span class="line"><span>│   └── grafana-dashboard.md    # Grafana configuration</span></span>
<span class="line"><span>├── types/                      # TypeScript types</span></span>
<span class="line"><span>│   ├── index.md                # Types overview</span></span>
<span class="line"><span>│   └── interfaces.md           # Core interfaces</span></span>
<span class="line"><span>└── STRUCTURE.md                # This file</span></span></code></pre></div><h2 id="key-features-documented" tabindex="-1">Key Features Documented <a class="header-anchor" href="#key-features-documented" aria-label="Permalink to &quot;Key Features Documented&quot;">​</a></h2><h3 id="core-server-features" tabindex="-1">Core Server Features <a class="header-anchor" href="#core-server-features" aria-label="Permalink to &quot;Core Server Features&quot;">​</a></h3><ul><li><strong>High Performance</strong>: Rust backend with Node.js bindings</li><li><strong>Express-like API</strong>: Familiar routing and middleware patterns</li><li><strong>Template Engine</strong>: Tera template integration</li><li><strong>Caching System</strong>: Multi-level caching with memory, Redis, and file storage</li><li><strong>Static File Serving</strong>: In-memory file handling with security</li><li><strong>File Operations</strong>: Upload, download, and management</li><li><strong>HTTP Utilities</strong>: Built-in client for external requests</li><li><strong>SSL Support</strong>: HTTPS with certificate management</li></ul><h3 id="advanced-features" tabindex="-1">Advanced Features <a class="header-anchor" href="#advanced-features" aria-label="Permalink to &quot;Advanced Features&quot;">​</a></h3><ul><li><strong>Promise Management</strong>: Revolutionary system for handling JavaScript promises in Rust</li><li><strong>Body Type Detection</strong>: Automatic detection and parsing of different content types</li><li><strong>Error Handling</strong>: Comprehensive error codes and status management</li><li><strong>CORS Support</strong>: Configurable cross-origin resource sharing</li><li><strong>Cookie Management</strong>: Advanced cookie handling with helpers</li><li><strong>Parameter System</strong>: Global and route-specific parameter management</li><li><strong>Router Support</strong>: Modular routing with nested routers</li></ul><h3 id="monitoring-performance" tabindex="-1">Monitoring &amp; Performance <a class="header-anchor" href="#monitoring-performance" aria-label="Permalink to &quot;Monitoring &amp; Performance&quot;">​</a></h3><ul><li><strong>Prometheus Metrics</strong>: Built-in metrics for monitoring</li><li><strong>Grafana Dashboard</strong>: Visualization for monitoring data</li><li><strong>Performance Comparison</strong>: Benchmarks vs Express.js</li><li><strong>Architecture Diagrams</strong>: Mermaid diagrams for system flow</li></ul><h2 id="what-was-created" tabindex="-1">What Was Created <a class="header-anchor" href="#what-was-created" aria-label="Permalink to &quot;What Was Created&quot;">​</a></h2><h3 id="new-documentation-files" tabindex="-1">New Documentation Files <a class="header-anchor" href="#new-documentation-files" aria-label="Permalink to &quot;New Documentation Files&quot;">​</a></h3><ul><li><strong>Guide Section</strong>: Installation, quick start, and configuration</li><li><strong>API Reference</strong>: Complete API documentation for all objects</li><li><strong>Examples</strong>: Practical code examples for all features</li><li><strong>Templates</strong>: Template engine documentation and examples</li><li><strong>Caching</strong>: Multi-level caching system documentation and examples</li><li><strong>Architecture</strong>: System design and promise management</li><li><strong>Monitoring</strong>: Metrics and monitoring setup</li><li><strong>Types</strong>: TypeScript interface definitions</li></ul><h3 id="enhanced-content" tabindex="-1">Enhanced Content <a class="header-anchor" href="#enhanced-content" aria-label="Permalink to &quot;Enhanced Content&quot;">​</a></h3><ul><li><strong>HTTP Utilities</strong>: Comprehensive HTTP client documentation</li><li><strong>Error Codes</strong>: Detailed error handling and status codes</li><li><strong>Body Handling</strong>: Advanced body type detection and processing</li><li><strong>Playground</strong>: Complete playground examples documentation</li><li><strong>Promise System</strong>: Revolutionary promise management system</li></ul><h3 id="configuration-updates" tabindex="-1">Configuration Updates <a class="header-anchor" href="#configuration-updates" aria-label="Permalink to &quot;Configuration Updates&quot;">​</a></h3><ul><li><strong>VitePress Config</strong>: Updated navigation and sidebar structure</li><li><strong>Mermaid Support</strong>: Added for architecture diagrams</li><li><strong>Search</strong>: Local search provider enabled</li><li><strong>Clean URLs</strong>: SEO-friendly URL structure</li></ul><h2 id="what-was-removed" tabindex="-1">What Was Removed <a class="header-anchor" href="#what-was-removed" aria-label="Permalink to &quot;What Was Removed&quot;">​</a></h2><h3 id="default-vitepress-files" tabindex="-1">Default VitePress Files <a class="header-anchor" href="#default-vitepress-files" aria-label="Permalink to &quot;Default VitePress Files&quot;">​</a></h3><ul><li><code>docs/api-examples.md</code> - Replaced with comprehensive API docs</li><li><code>docs/markdown-examples.md</code> - Not needed for this project</li><li><code>docs/index.md</code> - Replaced with custom landing page</li></ul><h3 id="duplicate-files" tabindex="-1">Duplicate Files <a class="header-anchor" href="#duplicate-files" aria-label="Permalink to &quot;Duplicate Files&quot;">​</a></h3><ul><li><code>docs/README.md</code> - Redundant with new structure</li><li><code>docs/SUMMARY.md</code> - Not needed in VitePress</li></ul><h2 id="what-was-preserved" tabindex="-1">What Was Preserved <a class="header-anchor" href="#what-was-preserved" aria-label="Permalink to &quot;What Was Preserved&quot;">​</a></h2><h3 id="original-content" tabindex="-1">Original Content <a class="header-anchor" href="#original-content" aria-label="Permalink to &quot;Original Content&quot;">​</a></h3><ul><li>All technical information from README.md</li><li>Performance benchmarks and comparisons</li><li>Architecture diagrams and flow charts</li><li>Code examples and playground content</li><li>Monitoring and metrics information</li></ul><h3 id="file-structure-1" tabindex="-1">File Structure <a class="header-anchor" href="#file-structure-1" aria-label="Permalink to &quot;File Structure&quot;">​</a></h3><ul><li><code>playground/</code> directory with examples</li><li><code>assets/</code> directory with images</li><li><code>ssl/</code> directory with certificates</li></ul><h2 id="benefits-of-new-structure" tabindex="-1">Benefits of New Structure <a class="header-anchor" href="#benefits-of-new-structure" aria-label="Permalink to &quot;Benefits of New Structure&quot;">​</a></h2><h3 id="developer-experience" tabindex="-1">Developer Experience <a class="header-anchor" href="#developer-experience" aria-label="Permalink to &quot;Developer Experience&quot;">​</a></h3><ul><li><strong>Faster Navigation</strong>: Logical grouping of related topics</li><li><strong>Better Search</strong>: Local search with VitePress</li><li><strong>Code Examples</strong>: Practical examples for every feature</li><li><strong>API Reference</strong>: Complete method documentation</li></ul><h3 id="maintenance" tabindex="-1">Maintenance <a class="header-anchor" href="#maintenance" aria-label="Permalink to &quot;Maintenance&quot;">​</a></h3><ul><li><strong>Modular Content</strong>: Easy to update individual sections</li><li><strong>Consistent Format</strong>: Standardized markdown structure</li><li><strong>Version Control</strong>: Better tracking of documentation changes</li><li><strong>Contributing</strong>: Clear structure for adding new content</li></ul><h3 id="performance" tabindex="-1">Performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;Performance&quot;">​</a></h3><ul><li><strong>Static Generation</strong>: Fast loading with VitePress</li><li><strong>Search Indexing</strong>: Optimized search performance</li><li><strong>Mobile Friendly</strong>: Responsive design for all devices</li><li><strong>SEO Optimized</strong>: Clean URLs and meta information</li></ul><h2 id="navigation-structure" tabindex="-1">Navigation Structure <a class="header-anchor" href="#navigation-structure" aria-label="Permalink to &quot;Navigation Structure&quot;">​</a></h2><h3 id="top-navigation" tabindex="-1">Top Navigation <a class="header-anchor" href="#top-navigation" aria-label="Permalink to &quot;Top Navigation&quot;">​</a></h3><ul><li><strong>Home</strong>: Landing page with overview</li><li><strong>Guide</strong>: Getting started and setup</li><li><strong>API</strong>: Complete API reference</li><li><strong>Examples</strong>: Code examples and patterns</li><li><strong>Templates</strong>: Template engine documentation</li><li><strong>Architecture</strong>: System design and internals</li><li><strong>Monitoring</strong>: Metrics and monitoring</li><li><strong>Types</strong>: TypeScript definitions</li></ul><h3 id="sidebar-navigation" tabindex="-1">Sidebar Navigation <a class="header-anchor" href="#sidebar-navigation" aria-label="Permalink to &quot;Sidebar Navigation&quot;">​</a></h3><ul><li><strong>Getting Started</strong>: Installation, quick start, configuration</li><li><strong>API Reference</strong>: App, router, request, response, HTTP utilities, error codes</li><li><strong>Examples</strong>: Middleware, file operations, advanced usage, body handling, playground</li><li><strong>Templates</strong>: Overview, syntax, examples</li><li><strong>Architecture</strong>: Overview, system design, promise system</li><li><strong>Monitoring</strong>: Overview, metrics, examples, Grafana dashboard</li><li><strong>TypeScript</strong>: Overview, interfaces</li></ul><h2 id="content-organization" tabindex="-1">Content Organization <a class="header-anchor" href="#content-organization" aria-label="Permalink to &quot;Content Organization&quot;">​</a></h2><h3 id="logical-grouping" tabindex="-1">Logical Grouping <a class="header-anchor" href="#logical-grouping" aria-label="Permalink to &quot;Logical Grouping&quot;">​</a></h3><ul><li><strong>Related Features</strong>: Grouped by functionality</li><li><strong>Progressive Learning</strong>: From basic to advanced</li><li><strong>Cross-References</strong>: Links between related sections</li><li><strong>Code Examples</strong>: Practical implementation for every feature</li></ul><h3 id="consistent-format" tabindex="-1">Consistent Format <a class="header-anchor" href="#consistent-format" aria-label="Permalink to &quot;Consistent Format&quot;">​</a></h3><ul><li><strong>Overview Sections</strong>: Each major section has an overview</li><li><strong>Code Blocks</strong>: Syntax-highlighted examples</li><li><strong>Tables</strong>: Structured information presentation</li><li><strong>Diagrams</strong>: Mermaid diagrams for complex concepts</li></ul><h2 id="future-enhancements" tabindex="-1">Future Enhancements <a class="header-anchor" href="#future-enhancements" aria-label="Permalink to &quot;Future Enhancements&quot;">​</a></h2><h3 id="potential-additions" tabindex="-1">Potential Additions <a class="header-anchor" href="#potential-additions" aria-label="Permalink to &quot;Potential Additions&quot;">​</a></h3><ul><li><strong>Deployment Guide</strong>: Production deployment instructions</li><li><strong>Troubleshooting</strong>: Common issues and solutions</li><li><strong>Migration Guide</strong>: From Express.js to RNode Server</li><li><strong>Community</strong>: Contributing guidelines and examples</li></ul><h3 id="technical-improvements" tabindex="-1">Technical Improvements <a class="header-anchor" href="#technical-improvements" aria-label="Permalink to &quot;Technical Improvements&quot;">​</a></h3><ul><li><strong>Interactive Examples</strong>: Run code examples in browser</li><li><strong>API Testing</strong>: Test API endpoints directly</li><li><strong>Performance Dashboard</strong>: Real-time performance metrics</li><li><strong>Integration Examples</strong>: Third-party service integrations</li></ul><h2 id="deployment" tabindex="-1">Deployment <a class="header-anchor" href="#deployment" aria-label="Permalink to &quot;Deployment&quot;">​</a></h2><h3 id="static-hosting" tabindex="-1">Static Hosting <a class="header-anchor" href="#static-hosting" aria-label="Permalink to &quot;Static Hosting&quot;">​</a></h3><ul><li><strong>GitHub Pages</strong>: Easy deployment from repository</li><li><strong>Netlify</strong>: Automatic deployment from Git</li><li><strong>Vercel</strong>: Fast deployment with edge functions</li><li><strong>Any Static Host</strong>: Compatible with all static hosting services</li></ul><h3 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h3><ul><li><strong>Easy to Add</strong>: Follow established structure</li><li><strong>Markdown Format</strong>: Simple markdown files</li><li><strong>Version Control</strong>: Git-based workflow</li><li><strong>Review Process</strong>: Pull request workflow</li></ul><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>The documentation has been completely restructured from a single monolithic README.md into a comprehensive, navigable VitePress site. The new structure provides:</p><ol><li><strong>Better Organization</strong>: Logical grouping of related topics</li><li><strong>Improved Navigation</strong>: Clear navigation structure with sidebar</li><li><strong>Enhanced Search</strong>: Local search capabilities</li><li><strong>Code Examples</strong>: Practical examples for every feature</li><li><strong>API Reference</strong>: Complete documentation for all APIs</li><li><strong>Architecture</strong>: Detailed system design and internals</li><li><strong>Monitoring</strong>: Comprehensive monitoring and metrics</li><li><strong>Templates</strong>: Template engine documentation</li><li><strong>Performance</strong>: Fast loading and responsive design</li><li><strong>Maintainability</strong>: Easy to update and extend</li></ol><p>This new structure makes RNode Server much more accessible to developers while maintaining all the technical depth and examples from the original documentation.</p>`,60)])])}const m=n(s,[["render",r]]);export{u as __pageData,m as default};
